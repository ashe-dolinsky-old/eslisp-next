// Generated by LiveScript 1.5.0
var parseSexpr, list, atom, string, convert, this$ = this;
parseSexpr = require('sexpr-plus').parse;
list = function(values, location){
  return {
    type: 'list',
    values: values,
    location: location
  };
};
atom = function(value, location){
  return {
    type: 'atom',
    value: value,
    location: location
  };
};
string = function(value, location){
  return {
    type: 'string',
    value: value,
    location: location
  };
};
convert = function(tree){
  var x$, that;
  x$ = tree.location;
  x$.start.column -= 1;
  x$.end.column -= 1;
  switch (that = tree.type) {
  case 'list':
    return list(tree.content.map(convert), tree.location);
  case 'atom':
    return atom(tree.content, tree.location);
  case 'string':
    return string(tree.content, tree.location);
  case null:
    throw Error("Unexpected type `" + that + "` (of `" + tree + "`)");
  }
};
module.exports = compose$(parseSexpr, function(it){
  return it.map(convert);
});
function compose$() {
  var functions = arguments;
  return function() {
    var i, result;
    result = functions[0].apply(this, arguments);
    for (i = 1; i < functions.length; ++i) {
      result = functions[i](result);
    }
    return result;
  };
}