// Generated by LiveScript 1.5.0
var astErrors, isExpression, statementify, importCompilerspaceMacro, createTransformMacro, toString$ = {}.toString;
astErrors = require('./esvalid-partial');
isExpression = require('esutils').ast.isExpression;
statementify = require('./es-statementify');
importCompilerspaceMacro = function(env, name, func){
  return env.importMacro(name, func);
};
createTransformMacro = function(env, func){
  return function(){
    var args, res$, i$, to$, result;
    res$ = [];
    for (i$ = 0, to$ = arguments.length; i$ < to$; ++i$) {
      res$.push(arguments[i$]);
    }
    args = res$;
    result = func.apply(env, args);
    if (toString$.call(result).slice(8, -1) === 'Array') {
      return result;
    } else {
      return [result];
    }
  };
};
module.exports = {
  importCompilerspaceMacro: importCompilerspaceMacro,
  createTransformMacro: createTransformMacro
};